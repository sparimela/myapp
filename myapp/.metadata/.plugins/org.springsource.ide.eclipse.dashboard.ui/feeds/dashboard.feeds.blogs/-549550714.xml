<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-09-14T16:16:59Z</updated>
  <entry>
    <title>Spring Cloud Camden RC1 is Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/14/spring-cloud-camden-rc1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Spencer Gibb</name>
    </author>
    <id>tag:spring.io,2016-09-14:2618</id>
    <updated>2016-09-14T16:16:59Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Release Candidate 1 (RC1) of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. This is mostly a bug fix release as Camden prepares for General Availability (GA). You can check out the Camden &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Camden-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#notable-changes-in-the-camden-release-train" class="anchor" name="notable-changes-in-the-camden-release-train"&gt;&lt;/a&gt;Notable Changes in the Camden Release Train&lt;/h2&gt;
&lt;p&gt;Spring Cloud Contract is a new project that provides support for Consumer Driven Contracts and service schemas in Spring applications. Spring Cloud Netflix supports customization of Ribbon component classes via properties, uses the new community maintained &lt;a href="https://github.com/OpenFeign/feign"&gt;OpenFeign&lt;/a&gt; and made various fixes and improvements to Zuul. Spring Cloud Consul adds support for Spring Cloud Bus using Consul&amp;rsquo;s event api. The CLI adds a &lt;code&gt;spring cloud&lt;/code&gt; command to start various Spring Cloud servers with a single command. Supported servers include Eureka, Config Server and Hystrix Dashboard.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Camden.RC1:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Build &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Stream &lt;/td&gt;
      &lt;td&gt;Brooklyn.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Netflix &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;1.1.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Contract &lt;/td&gt;
      &lt;td&gt;1.0.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE: Spring Cloud CLI 1.2.0.RC1 will be released after Spring Boot 1.4.1 is released because of a regression.&lt;/p&gt;
&lt;p&gt;The combined release train documentation is available &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloudOSS"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Camden.RC1&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
repositories {&#xD;
    maven {&#xD;
        url &amp;#39;http://repo.spring.io/milestone&amp;#39;&#xD;
    }&#xD;
}&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Camden.RC1&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.3.0 M1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/14/spring-session-1-3-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-09-14:2617</id>
    <updated>2016-09-14T12:44:02Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Session 1.3.0.M1. This release release closes lots of community submitted Pull Requests. For a complete list of changes see the &lt;a href="https://github.com/spring-projects/spring-session/milestone/6?closed=1"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="what-s-new-in-spring-session-1-3-0-m1" class="sect0"&gt;&lt;a class="anchor" href="#what-s-new-in-spring-session-1-3-0-m1"&gt;&lt;/a&gt;What’s New in Spring Session 1.3.0 M1&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Highlights include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First Class Support for &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M1/reference/html5/#api-enablehazelcasthttpsession"&gt;Hazelcast&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First class &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M1/reference/html5/#spring-security-concurrent-sessions-how"&gt;Spring Security’s concurrent session management&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-session/tree/1.3.0.M1/samples/httpsession-redis-json"&gt;Redis Sample with GenericJackson2JsonRedisSerializer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.session.cleanup.cron.expression&lt;/code&gt; can be used to override the cleanup task&amp;#8217;s cron expression&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lots of performance improvements and bug fixes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-session/issues"&gt;GitHub Issues&lt;/a&gt;, or via the comments section. You can also ping me &lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe &lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of &lt;a href="https://github.com/spring-projects/spring-session/blob/1.3.0.M1/CONTRIBUTING.adoc"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M1/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 13, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/13/this-week-in-spring-september-13-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-13:2615</id>
    <updated>2016-09-13T10:30:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&amp;rsquo;s been an amazing week here in China, hanging out with Alibaba and Huawei, bringing the Spring. This week it&amp;rsquo;s off to Shanghai, Beijing, Guangzhou, Shenzhen and Hong Kong! &lt;/p&gt;
&lt;p&gt;Our pal &lt;a href="http://twitter.com/PieterHumphrey"&gt;Pieter Humphrey&lt;/a&gt; has been busy this week getting the SpringOne Platform 2016 videos up and online for us to enjoy so there&amp;rsquo;s a lot of good stuff this week! Thanks Pieter!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Want see Mark Fisher and Mark Pollack present and live demo their way through Spring Cloud Data Flow on September 29th? &lt;a href="https://spring.io/blog/2016/09/13/webinar-data-microservices-in-the-cloud"&gt;Reserve your seat now!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to learn what&amp;rsquo;s new in Spring Framework 4.3? &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-modern-java-component-design-with-spring-framework-4-3"&gt;Join Spring framework lead Juergen Hoeller for this look at an awesome framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked this talk from Home Depot &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers"&gt;on what 12 Factor applications means to a Java Developer&lt;/a&gt; and turns out it was one of the top attended at the conference!&lt;/li&gt;
  &lt;li&gt;I gave an almost &lt;em&gt;2 hour&lt;/em&gt; long talk at SpringOne Platform 2016 called &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-cloud-native-java"&gt;&lt;em&gt;Cloud Native Java&lt;/em&gt;&lt;/a&gt; covering Spring Boot (REST, HATEOAS, Actuator, JPA), Spring Cloud (centralized configuration, service registration and discovery, circuit breakers, microproxies, API gateways, eventual consistency, stream processing, observability and monitoring, distributed tracing), Spring Cloud Security (OAuth and SSO) and Spring Cloud Data Flow. Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;Join Apache Tomcat ninja Mark Thomas for &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-apache-tomcat-roadmap"&gt;a great look at the Apache Tomcat roadmap&lt;/a&gt; in this talk from SpringOne Platform 2016&lt;/li&gt;
  &lt;li&gt;Spring Cloud Task and Spring Batch lead Michael Minella has &lt;a href="https://spring.io/blog/2016/09/09/spring-cloud-task-1-0-3-release-and-1-1-0-m1-are-now-available"&gt;just announced Spring Cloud Task 1.0.3 and 1.1.0.M1 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration lead Gary Russell has just announced Spring for Apache Kafka 1.1.0 M2, which now supports &lt;a href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available"&gt;&lt;em&gt;batching&lt;/em&gt; consumption of messages from a Kafka destination&lt;/a&gt; and seek operations! Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream lead Marius Bogoevici has just &lt;a href="https://spring.io/blog/2016/09/08/spring-cloud-stream-brooklyn-rc1-is-available"&gt;announced Spring Cloud Stream Brooklyn RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Session lead Rob Winch has just announced &lt;a href="https://spring.io/blog/2016/09/07/spring-session-1-2-2-released"&gt;Spring Session 1.2.2 which contains numerous bugfixes and improvements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cool! &lt;a href="https://github.com/cloudfoundry/gorouter/commit/1647c65cf65f712f7597c811cf7f98cfaab9365a"&gt;Instance-specific routing has just landed in Cloud Foundry&amp;rsquo;s &lt;code&gt;gorouter&lt;/code&gt;&lt;/a&gt;! This is &lt;em&gt;ideal&lt;/em&gt; for instance-specific Spring Boot actuator endpoints!&lt;/li&gt;
  &lt;li&gt;I like this &lt;a href="http://www.huangyunkun.com/2016/08/30/spring-retry/"&gt;Chinese-language introduction to Spring Retry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to hack together a poor-man&amp;rsquo;s authorization server with Spring Session? &lt;a href="https://beku8.wordpress.com/2016/09/12/configuring-cross-domain-sso-and-slo-with-spring-security-and-spring-session/"&gt;This is a pretty good introduction!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://yq.aliyun.com/articles/60165"&gt;I loved this blog introducing Spring Cloud Sleuth and Zipkin support on Aliyun&amp;rsquo;s blog&lt;/a&gt;. Aliyun, for those not aware, is like AWS to Alibaba.com&amp;rsquo;s Amazon. This is super cool!&lt;/li&gt;
  &lt;li&gt;Our former CTO Adrian Coyler has a great article on his Blog &amp;ldquo;The Morning Paper&amp;rdquo; on handling &lt;a href="https://blog.acolyer.org/2016/09/13/data-on-the-outside-versus-data-on-the-inside/"&gt;data in microservice architecture&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Data Microservices in the Cloud</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/13/webinar-data-microservices-in-the-cloud" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-13:2616</id>
    <updated>2016-09-13T10:28:00Z</updated>
    <content type="html">&lt;p&gt;Speakers: Mark Pollack, Mark Fisher&lt;br/&gt;Spring Cloud Data Flow enables you to create data pipelines for many common use-cases such as data ingestion, real-time analytics and data import/export.&lt;br/&gt;In this webinar, we will introduce Spring Cloud Data Flow’s architecture and walk through the orchestration capabilities of long-running and short-lived data-centric applications on multiple runtime platforms such as Cloud Foundry, Kubernetes, Apache Mesos and Apache YARN.&lt;br/&gt;Spring Cloud Data Flow represents the evolution of Spring XD and retains the DSL to define data pipelines as well as the web based UI designer, but changes the component model from modules that used to run inside a container to standard Spring Boot applications built with Spring Cloud Stream and Spring Cloud Task APIs.&lt;/p&gt;
&lt;p&gt;Date: Thursday, September 29, 2016&lt;br/&gt;Time: 7:00am PDT / 2:00pm GMT / 3:00pm CET&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_7AM-Data-Microservices-in-the-Cloud_Q316_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thursday, September 29&lt;br/&gt;10:00AM PDT&lt;br/&gt;(San Francisco, GMT-07:00)&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_10AMDataMicroservicesintheCloud_Q316_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: 12 Factor, or Cloud Native Apps: What EXACTLY Does that Mean for Spring Developers?</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2614</id>
    <updated>2016-09-12T15:46:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Thomas Gamble, Home Depot&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/Pivotal/12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers-64853692"&gt;http://www.slideshare.net/Pivotal/12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers-64853692&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your team is excited about getting started with Spring Boot and Cloud Native, but you&amp;rsquo;re not entirely sure you&amp;rsquo;re ready to have the team continuously delivering to prod using cf push from their local desktops. The freedom of cloud native development can be very empowering for developers, but it shouldn&amp;rsquo;t be something that terrifies the operations and security teams. We&amp;rsquo;ll discuss how you can setup a fast and reliable deployment process, as well as some interesting things to thing about in the future. One of the most well known descriptions of these new paradigms is the Twelve Factor App (12factor.net), which describes elements of cloud native applications. Many of these needs are squarely met through the Spring Framework, others require support from other systems. In this session we will examine each of the twelve factors and present how Spring, and platforms such as Cloud Foundry satisfy them, and in some cases we’ll even suggest that responsibility should shift from Spring to platforms. At the conclusion you will understand what is needed for cloud‐native applications, why and how to deliver on those requirements.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/t2zfJBc1SeE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Cloud Native Java</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-cloud-native-java" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2613</id>
    <updated>2016-09-12T14:02:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/cloud-native-java"&gt;http://www.slideshare.net/SpringCentral/cloud-native-java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;It is not necessary to change. Survival is not mandatory.” -W. Edwards Deming&lt;/p&gt;
&lt;p&gt;Work takes time to flow through an organization and ultimately be deployed to production where it captures value. It’s critical to reduce time-to-production. Software - for many organizations and industries - is a competitive advantage. Organizations break their larger software ambitions into smaller, independently deployable, feature -centric batches of work - microservices. In order to reduce the round-trip between stations of work, organizations collapse or consolidate as much of them as possible and automate the rest; developers and operations beget “devops,” cloud-based services and platforms (like Cloud Foundry) automate operations work and break down the need for ITIL tickets and change management boards. But velocity, for velocity’s sake, is dangerous. Microservices invite architectural complexity that few are prepared to address. In this talk, we’ll look at how high performance organizations like Ticketmaster, Alibaba, and Netflix make short work of that complexity with Spring Boot and Spring Cloud.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5q8B6lYhFvE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Modern Java Component Design with Spring Framework 4.3</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-modern-java-component-design-with-spring-framework-4-3" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2612</id>
    <updated>2016-09-12T13:37:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Jüergen Hoeller&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/modern-java-component-design-with-spring-framework-43"&gt;http://www.slideshare.net/SpringCentral/modern-java-component-design-with-spring-framework-43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring&amp;rsquo;s programming and configuration model has a strong design philosophy with respect to application components and configuration artifacts. Spring&amp;rsquo;s annotation-based component story is fine-tuned for source code readability as well as consistency across an entire application&amp;rsquo;s codebase. This session presents selected Spring Framework 4 component model highlights, with a focus on the current Spring Framework 4.3 and a selection of Java 8 enabled features, illustrated with many code examples and noteworthy design considerations.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8Uyut8JjH34" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Apache Tomcat Roadmap</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-apache-tomcat-roadmap" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2610</id>
    <updated>2016-09-12T12:46:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Mark Thomas&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/apache-tomcat-roadmap"&gt;http://www.slideshare.net/SpringCentral/apache-tomcat-roadmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Development of Apache Tomcat continues at a strong pace. This presentation will cover:&lt;br/&gt;Future development plans (features, timing)&lt;br/&gt;Current work&lt;br/&gt;Overview of new features available now in Tomcat 9 / Tomcat 8.5&lt;br/&gt; - SNI&lt;br/&gt; - OpenSSL based TLS&lt;br/&gt; - OAuth (via JASPIC)&lt;br/&gt;Why do we need Tomcat 8.5?&lt;br/&gt;Migrating from older versions&lt;br/&gt;End-of-life plans for older versions&lt;br/&gt;Progress towards a Servlet 4.0 implementation&lt;/p&gt;
&lt;p&gt;As a result of attending this presentation, the audience will gain an understanding of the new features available now or soon to be available in Tomcat 9 and how they can best utilize these features in their applications.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/n6vLfVQGBBQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 1.0.3.RELEASE and 1.1.0.M1 are now available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/09/spring-cloud-task-1-0-3-release-and-1-1-0-m1-are-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2016-09-09:2609</id>
    <updated>2016-09-09T18:43:04Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 1.0.3.RELEASE and 1.1.0.M1 are now available via Maven Central, Github and the Pivotal download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new-in-spring-cloud-task-1-0-3-release" class="anchor" name="what-rsquo-s-new-in-spring-cloud-task-1-0-3-release"&gt;&lt;/a&gt;What&amp;rsquo;s new in Spring Cloud Task 1.0.3.RELEASE&lt;/h2&gt;
&lt;p&gt;1.0.3.RELEASE represents the next minor release for the 1.0.x branch. It&amp;rsquo;s a minor update that cleans up the dependency management within the project to be in alignment with how the rest of the Spring Cloud portfolio manages it&amp;rsquo;s dependencies.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new-in-spring-cloud-task-1-1-0-m1" class="anchor" name="what-rsquo-s-new-in-spring-cloud-task-1-1-0-m1"&gt;&lt;/a&gt;What&amp;rsquo;s new in Spring Cloud Task 1.1.0.M1&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 1.1.0&amp;rsquo;s main theme is to improve overall support of task functionality and continue to migrate features that were found in Spring XD&amp;rsquo;s containers for batch jobs to Spring Cloud Task. The main updates for this release are the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Updated error message handling&lt;/em&gt; - This release adds a new column to the &lt;code&gt;TASK_EXECUTION&lt;/code&gt; table, &lt;code&gt;ERROR_MESSAGE&lt;/code&gt;. This new column will be where any exception that is thrown causing the failure of a task to be recorded (this is changed from the &lt;code&gt;EXIT_MESSAGE&lt;/code&gt; field in previous versions). This change allows for the &lt;code&gt;EXIT_MESSAGE&lt;/code&gt; field to be better utilized for orchestration of tasks.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Improved options for customizing the launch of partitioned job workers&lt;/em&gt; - When using the &lt;code&gt;DeployerPartitionHandler&lt;/code&gt;, 1.1.0 now provides abstractions around customizing the environment variables and command line arguments on a per partition basis. This is an improvement of the all or nothing option available in the 1.0.x branch.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 1.1.0 is expected to be GA before the end of the year in line with Spring Cloud Data Flow 1.1.0. Between now and then, we&amp;rsquo;ll be refining the partitioning model as well as adding additional capabilities to better integrate with Spring Cloud Data Flow.&lt;/p&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, or to me directly via Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/current/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.1.0 Milestone 2 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-09-08:2607</id>
    <updated>2016-09-08T14:13:49Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that the second milestone for Spring for Apache Kafka version 1.1.0.M2 is now available in the &lt;a href="https://repo.spring.io/milestone"&gt;spring milestone repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This includes some bug fixes and the following new features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The ability to process a batch of messages (&lt;a href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available"&gt;introduced in the last milestone&lt;/a&gt;) is now available when using the &lt;code&gt;@KafkaListener&lt;/code&gt; annotation, for example&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@KafkaListener(id = "list", topics = "myTopic",
                          containerFactory = "batchFactory")
public void listen(List&amp;lt;String&amp;gt; list) {
    ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now perform seek operations from the listener - this allows setting an initial offset when partitions are assigned by Kafka when using group management.
You can also perform arbitrary seek operations after initialization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;KafkaTemplate&lt;/code&gt; now provides access to the &lt;code&gt;metrics&lt;/code&gt; and &lt;code&gt;partitionsFor&lt;/code&gt; methods on the &lt;code&gt;Producer&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In addition, the first milestone of &lt;code&gt;spring-integration-kafka&lt;/code&gt; version 2.1 is now available, utilizing the &lt;code&gt;spring-kafka&lt;/code&gt; 1.1.0.M2 version.
It also supports batch payloads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="http://projects.spring.io/spring-kafka/"&gt;project page&lt;/a&gt; for links to documentation and more information.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Stream Brooklyn.RC1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-cloud-stream-brooklyn-rc1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marius Bogoevici</name>
    </author>
    <id>tag:spring.io,2016-09-08:2608</id>
    <updated>2016-09-08T13:59:36Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first release candidate of the &lt;a href="http://cloud.spring.io/spring-cloud-stream"&gt;Spring Cloud Stream&lt;/a&gt; Brooklyn release train. Spring Cloud Stream Brooklyn.RC1 is available for use in the &lt;a href="http://repo.spring.io/libs-milestone-local/org/springframework/cloud/spring-cloud-stream-dependencies/Brooklyn.RC1"&gt;Spring Milestone repository&lt;/a&gt;, a detailed description of its features can be found in the &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt;. Release notes are available &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-starters/wiki/Brooklyn-Release-Notes"&gt;here&lt;/a&gt; and include important information on the migration path.&lt;/p&gt;
&lt;p&gt;As this release follows closely the previous &lt;a href="https://spring.io/blog/2599-spring-cloud-stream-brooklyn-m1-is-available/edit"&gt;milestone release&lt;/a&gt; it contains a small number of fixes, and one major addition, which is support for Kafka 0.10 via &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/#_using_the_binder_with_apache_kafka_0_10"&gt;drop-in dependency replacement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We plan to have a general availability release in the next couple of weeks. &lt;/p&gt;
&lt;p&gt;Due to the timeline, the following features (which were intended for 1.1.0.RELEASE) will be deferred to version 1.2 (development on which will start soon after the GA release):&lt;br/&gt;- add support for Reactive binders (including reactive producers and consumers, such as the ones introduced by the &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt; project);&lt;br/&gt;- add support for developing applications using the &lt;a href="http://kafka.apache.org/documentation.html#streams"&gt;Kafka Stream API&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either in &lt;a href="https://github.com/spring-cloud/spring-cloud-stream"&gt;GitHub&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud-stream"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/springcloudoss"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.2.2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/07/spring-session-1-2-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-09-07:2606</id>
    <updated>2016-09-07T19:36:01Z</updated>
    <content type="html">&lt;p&gt;I&amp;rsquo;m pleased to announce the release of Spring Session 1.2.2.RELEASE. &lt;a href="https://github.com/spring-projects/spring-session/issues?q=milestone%3A1.2.2"&gt;This release contains&lt;/a&gt; numerous bug fixes and trivial enhancements. Some of the highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fixes and improvements for supporting &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/#httpsession-multi"&gt;multiple sessions&lt;/a&gt; in the same browser when working with Tomcat 8.5 &lt;a href="https://github.com/spring-projects/spring-session/issues/605"&gt;#605&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/611"&gt;#611&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/615"&gt;#615&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improvements for JDBC support to work with DB2 &lt;a href="https://github.com/spring-projects/spring-session/pull/600"&gt;#600&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-session/issues/594"&gt;Unregistered GemFire Instantiator causes deserialization issues on app restarts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 6th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/06/this-week-in-spring-september-6th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-06:2605</id>
    <updated>2016-09-06T03:35:24Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in Shanghai, China and Hangzhou, China where I spoke at the &lt;em&gt;ginormous&lt;/em&gt; Huawei Connect conference in Shanghai and where I&amp;rsquo;ll be working with Alibaba and Huawei for a week or so. I&amp;rsquo;ll also be speaking at the Hangzhou Java User Group, too. &lt;/p&gt;
&lt;p&gt;(Can you believe we&amp;rsquo;re already in September?? Seriously blown away! 2017 is just around the corner!)&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m also, technically, on vacation, so I&amp;rsquo;ll keep this post to a minimum! :) &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring REST Docs lead Andy Wilkinson &lt;a href="https://spring.io/blog/2016/08/31/spring-rest-docs-1-1-2-release"&gt;has just announced Spring REST Docs 1.1.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security ninja Joe Grandja just announced a &lt;a href="https://spring.io/blog/2016/08/31/spring-security-oauth2-client-authentication-issue"&gt;very important fix for Spring Security OAuth 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring ninja Stéphane Nicoll put together a &lt;em&gt;very&lt;/em&gt; interesting article on how &lt;a href="https://spring.io/blog/2016/08/30/custom-test-slice-with-spring-boot-1-4"&gt;to write a custom spring Boot test &lt;em&gt;slice&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our buddy Eugene is back at it again, with updates to his guide on &lt;a href="http://www.baeldung.com/spring-cloud-netflix-hystrix"&gt;using Spring Cloud&amp;rsquo;s Netflix Hystrix support&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;learn more about &lt;a href="https://www.iancollington.com/centralised-configuration-using-spring-boot/"&gt;Spring Cloud&amp;rsquo;s Config Server&lt;/a&gt; in this nice post from Ian Collington.&lt;/li&gt;
  &lt;li&gt;I love &lt;a href="http://www.forbes.com/sites/andrewcave/2016/08/31/paul-maritzs-vision-for-pivotal-and-the-battle-with-amazon-over-open-source-cloud-computing"&gt;this Forbes.com interview with Paul Maritz&lt;/a&gt; (Pivotal&amp;rsquo;s founding CEO, current-chairman, former top Microsoft executive, and former VMWare CEO on his dreams&lt;/li&gt;
  &lt;li&gt;I&amp;rsquo;m honored to be included on &lt;a href="http://techbeacon.com/java-leaders-you-should-follow-twitter"&gt;a TechBeacon roundup of Java folks in the Twitterverse you might like to follow&lt;/a&gt;. The list is pretty good. About half of those people are &lt;em&gt;definitely&lt;/em&gt; worth a follow, so check it out!&lt;/li&gt;
  &lt;li&gt;I did a Chinese-language &lt;a href="http://www.infoq.com/cn/news/2016/09/bug-fix-speed-matters-microservi"&gt;interview with InfoQ on microservices and cloud-native applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this isn&amp;rsquo;t a Pivotal project, per se, but I thought it interesting; Netflix&amp;rsquo;s just announced a new tool &lt;a href="http://techblog.netflix.com/2016/09/netflix-data-benchmark-benchmarking.html"&gt;called NDBench Runner that helps to benchmark data stores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This is interesting: a thin JavaScript library called Hybind &lt;a href="http://www.swisspush.org/web/2016/08/30/spring-data-rest-hybind"&gt;to bind to Spring Data REST / HATEOAS hypermedia resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The Baeldung blog has a nice post &lt;a href="http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api"&gt;on setting up Swagger with a Spring REST API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;There are multiple ways to acheive CORS in a Spring MVC application. If you&amp;rsquo;re using an older variant of Spring MVC, before Spring Framework 4.2, then this post on &lt;a href="http://www.veli.io/enable-cors-spring-boot"&gt;creating a &lt;code&gt;javax.servlet.Filter&lt;/code&gt; will work ideally&lt;/a&gt;. Otherwise, check out &lt;a href="https://spring.io/guides/gs/rest-service-cors/"&gt;this Spring guide on CORS&lt;/a&gt; and &lt;a href="https://spring.io/blog/2015/06/08/cors-support-in-spring-framework"&gt;this Spring announcement blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;wow! this is an exhaustive look &lt;a href="http://www.dineshonjava.com/2016/08/spring-boot-actuator-complete-guide.html#.V84zypN96EI"&gt;at Spring Boot&amp;rsquo;s Actuator&lt;/a&gt; on the &lt;em&gt;Dinesh on Java&lt;/em&gt; blog.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring REST Docs 1.1.2.RELEASE</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/31/spring-rest-docs-1-1-2-release" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2016-08-31:2604</id>
    <updated>2016-08-31T11:07:16Z</updated>
    <content type="html">&lt;p&gt;It&amp;rsquo;s my pleasure to announce that &lt;a href="https://github.com/spring-projects/spring-restdocs"&gt;Spring REST Docs&lt;/a&gt; 1.1.2.RELEASE is available from Maven Central, JCenter, and our &lt;a href="https://repo.spring.io/release"&gt;release repository&lt;/a&gt;. My thanks to everyone who contributed to this release by reporting bugs and opening pull requests.&lt;/p&gt;
&lt;p&gt;This maintenance release includes a &lt;a href="https://github.com/spring-projects/spring-restdocs/issues?q=milestone%3A1.1.2.RELEASE"&gt;number of bug fixes&lt;/a&gt; and is a recommend upgrade for all Spring REST Docs users. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-restdocs"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-restdocs"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-restdocs/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-restdocs/docs/1.1.2.RELEASE"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Security OAuth2 - Client Authentication Issue</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/31/spring-security-oauth2-client-authentication-issue" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Joe Grandja</name>
    </author>
    <id>tag:spring.io,2016-08-25:2598</id>
    <updated>2016-08-31T11:07:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Issue &lt;a href="https://github.com/spring-projects/spring-security-oauth/issues/808"&gt;#808&lt;/a&gt; was recently reported that allowed a user to authenticate as a client and obtain an access token via the client_credentials or password grant flow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This unique scenario occurs when a client and user have the same identifier (clientId and username). The user&amp;#8217;s credentials are used for client authentication during a client_credentials or password grant flow and is successful in obtaining an access token with the authorities of the client.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="the-fix"&gt;&lt;a class="anchor" href="#the-fix"&gt;&lt;/a&gt;The Fix&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This bug has been fixed in &lt;a href="https://github.com/spring-projects/spring-security-oauth/commit/1ed986a8486ab4e84295ee5d0260c790c573e7d7"&gt;1ed986a&lt;/a&gt; and released in 2.0.11.RELEASE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you’re using Java-based configuration, please update to 2.0.11.RELEASE.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;However, if you’re using XML-based configuration, please take the following actions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Update to 2.0.11.RELEASE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Look at this &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/config/xml/AuthorizationServerClientCredentialsPasswordValidXmlTests.java"&gt;JUnit test&lt;/a&gt; and it’s associated &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/resources/org/springframework/security/oauth2/config/xml/authorization-server-client-credentials-password-valid.xml"&gt;XML configuration&lt;/a&gt; to ensure the &lt;code&gt;AuthenticationManager&lt;/code&gt; for &lt;strong&gt;client authentication&lt;/strong&gt; and the &lt;code&gt;AuthenticationManager&lt;/code&gt; for &lt;strong&gt;user authentication&lt;/strong&gt; is setup the same in your configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a precautionary step, make sure your XML configuration is &lt;strong&gt;NOT&lt;/strong&gt; setup the same as in this &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/config/xml/AuthorizationServerClientCredentialsPasswordInvalidXmlTests.java"&gt;JUnit test&lt;/a&gt; and associated &lt;a href="https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/resources/org/springframework/security/oauth2/config/xml/authorization-server-client-credentials-password-invalid.xml"&gt;XML configuration&lt;/a&gt; as it demonstrates the original issue.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="credit"&gt;&lt;a class="anchor" href="#credit"&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Thank you for reporting this issue &lt;a href="https://github.com/socket70"&gt;Michael Pridemore&lt;/a&gt; and &lt;a href="https://github.com/benkiefer"&gt;Ben Kiefer&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Custom test slice with Spring Boot 1.4</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/30/custom-test-slice-with-spring-boot-1-4" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-08-23:2590</id>
    <updated>2016-08-30T09:31:12Z</updated>
    <content type="html">&lt;p&gt;Spring Boot 1.4 includes a major overhaul of testing support and one of these features is &lt;em&gt;test slicing&lt;/em&gt;. I&amp;rsquo;d like to take the opportunity in this blog post to further explain what it is and how you can easily create your own slices.&lt;/p&gt;
&lt;p&gt;Test slicing is about segmenting the &lt;code&gt;ApplicationContext&lt;/code&gt; that is created for your test. Typically, if you want to test a controller using &lt;code&gt;MockMvc&lt;/code&gt;, surely you don&amp;rsquo;t want to bother with the data layer. Instead you&amp;rsquo;d probably want to &lt;em&gt;mock&lt;/em&gt; the service that your controller uses and validate that all the web-related interaction works as expected. This can be summarized in the example below:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RunWith(SpringRunner.class)&#xD;
@WebMvcTest(UserVehicleController.class)&#xD;
public class UserVehicleControllerTests {&#xD;
&#xD;
    @Autowired&#xD;
    private MockMvc mvc;&#xD;
&#xD;
    @MockBean&#xD;
    private UserVehicleService userVehicleService;&#xD;
&#xD;
    @Test&#xD;
    public void testExample() throws Exception {&#xD;
        given(this.userVehicleService.getVehicleDetails(&amp;quot;sboot&amp;quot;))&#xD;
                .willReturn(new VehicleDetails(&amp;quot;Honda&amp;quot;, &amp;quot;Civic&amp;quot;));&#xD;
        this.mvc.perform(get(&amp;quot;/sboot/vehicle&amp;quot;).accept(MediaType.TEXT_PLAIN))&#xD;
                .andExpect(status().isOk()).andExpect(content().string(&amp;quot;Honda Civic&amp;quot;));&#xD;
    }&#xD;
&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;@WebMvcTest&lt;/code&gt; is the web test slice in Spring Boot 1.4. When it is present, you instruct Spring Boot that a web environment is required and that only the specified controller(s) should be instantiated. Because it knows about the nature of the test, it can take additional smart decisions for you (e.g. auto-configure &lt;code&gt;MockMvc&lt;/code&gt; so that all that&amp;rsquo;s left is to inject it). Also, your controller has a dependency towards &lt;code&gt;UserVehicleService&lt;/code&gt; so starting the context would lead to a failure because the &lt;code&gt;ApplicationContext&lt;/code&gt; doesn&amp;rsquo;t know about it (remember, only the web infrastructure and &lt;code&gt;UserVehicleController&lt;/code&gt; are known). &lt;code&gt;@MockBean&lt;/code&gt; is used here to register a &lt;code&gt;UserVehicleService&lt;/code&gt; mock so that it can be transparently injected in the controller.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s now have a look to the implementation to better understand how Spring Boot manages this for you. Our first stop is &lt;code&gt;@WebMvcTest&lt;/code&gt; (removing &lt;code&gt;@Target&lt;/code&gt; and friends for brievety):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@BootstrapWith(WebMvcTestContextBootstrapper.class)&#xD;
@OverrideAutoConfiguration(enabled = false)&#xD;
@TypeExcludeFilters(WebMvcTypeExcludeFilter.class)&#xD;
@AutoConfigureCache&#xD;
@AutoConfigureWebMvc&#xD;
@AutoConfigureMockMvc&#xD;
@ImportAutoConfiguration&#xD;
public @interface WebMvcTest { ... }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This declaration can be split in 3 areas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Auto-configuration customizations&lt;/li&gt;
  &lt;li&gt;Classpath scanning tuning&lt;/li&gt;
  &lt;li&gt;Test bootstrap&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#auto-configuration-customizations" class="anchor" name="auto-configuration-customizations"&gt;&lt;/a&gt;Auto-configuration customizations&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.4 now defines a &lt;code&gt;spring-boot-test-autoconfigure&lt;/code&gt; module that provides a collection of test-related auto-configurations. These auto-configurations are composable and can help you crafting your own infrastructure easily. &lt;/p&gt;
&lt;p&gt;Back to &lt;code&gt;@WebMvcTest&lt;/code&gt;, the first thing we want to do is to disable the default auto-configuration: &lt;code&gt;OverrideAutoConfiguration&lt;/code&gt; does that. Because the default auto-configuration is now disabled, you have to opt-in for the relevant auto-configurations you want to include. The three &lt;code&gt;AutoConfigure&lt;/code&gt; annotations do that for us: they make sure that a web environment is available, &lt;code&gt;MockMvc&lt;/code&gt; is configured and a no-op cache manager is available. Let&amp;rsquo;s have a look to an excerpt of &lt;code&gt;AutoconfigureMockMvc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@ImportAutoConfiguration&#xD;
@PropertyMapping(&amp;quot;spring.test.mockmvc&amp;quot;)&#xD;
public @interface AutoConfigureMockMvc {&#xD;
&#xD;
    boolean addFilters() default true;&#xD;
&#xD;
    @PropertyMapping(&amp;quot;webclient.enabled&amp;quot;)&#xD;
    boolean webClientEnabled() default true;&#xD;
&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;@ImportAutoConfiguration&lt;/code&gt; is an annotation that lists the auto-configurations that should be included. Alternatively, you can provide the list in &lt;code&gt;META-INF/spring.factories&lt;/code&gt; using the fully qualified name of the annotation for the key. This is what&amp;rsquo;s defined for &lt;code&gt;AutoConfigureMockMvc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc=\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration,\&#xD;
org.s.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You get the idea: each annotation brings some auto-configurations and you can compose them any way you want. You&amp;rsquo;ll notice that &lt;code&gt;WebMvcTest&lt;/code&gt; has also a &lt;code&gt;ImportAutoConfiguration&lt;/code&gt; but there&amp;rsquo;s no entry in &lt;code&gt;spring.factories&lt;/code&gt; for it. Spring Boot will scan all &lt;code&gt;spring.factories&lt;/code&gt; in the classpath and &lt;em&gt;merge&lt;/em&gt; the content if necessary. If a module of yours wants to add additional behaviour to &lt;code&gt;@WebMvcTest&lt;/code&gt; (or &lt;code&gt;@AutoConfigureMockMvc&lt;/code&gt;), all that&amp;rsquo;s required is to create a &lt;code&gt;META-INF/spring.factories&lt;/code&gt; and register additional auto-configuration classes. You can also use &lt;code&gt;@AutoconfigureBefore&lt;/code&gt; and &lt;code&gt;@AutoconfigureAfter&lt;/code&gt; to order them.&lt;/p&gt;
&lt;p&gt;Test auto-configurations are configurable as usual: the &lt;code&gt;@PropertyMapping&lt;/code&gt; annotation at class-level maps the attributes of the annotation to the &lt;code&gt;Environment&lt;/code&gt; so that the auto-configuration code can extract the value and adapt the configuration accordingly. We can see the &lt;code&gt;webClientEnabled&lt;/code&gt; attribute above is transparently used in the auto-configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@ConditionalOnProperty(prefix = &amp;quot;spring.test.mockmvc.webclient&amp;quot;, &#xD;
        name = &amp;quot;enabled&amp;quot;, matchIfMissing = true)&#xD;
public class MockMvcWebClientAutoConfiguration { ... }
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#classpath-scanning-tuning" class="anchor" name="classpath-scanning-tuning"&gt;&lt;/a&gt;Classpath scanning tuning&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TypeExcludeFilters&lt;/code&gt; is a way to tune classpath scanning. In the case of &lt;code&gt;@WebMvcTest&lt;/code&gt; we&amp;rsquo;re only going to &lt;a href="https://github.com/spring-projects/spring-boot/blob/bbc91cc03f5df31c1985811d07abe4f9a906355e/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/WebMvcTypeExcludeFilter.java"&gt;include certain web-related components&lt;/a&gt; and ignore all the rest. This is quite powerful as you can use classpath scanning the usual way and only include what&amp;rsquo;s required for your slice.&lt;/p&gt;&lt;h2&gt;&lt;a href="#test-bootstrap" class="anchor" name="test-bootstrap"&gt;&lt;/a&gt;Test bootstrap&lt;/h2&gt;
&lt;p&gt;Finally, the new test bootstrap makes sure to identify the &lt;code&gt;@SpringBootApplication&lt;/code&gt; annotated class in your project (unless one is specified). This is a nice default as you don&amp;rsquo;t have to specify it anymore and classpath scanning will be right &lt;em&gt;by default&lt;/em&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#creating-your-own-slice" class="anchor" name="creating-your-own-slice"&gt;&lt;/a&gt;Creating your own slice&lt;/h2&gt;
&lt;p&gt;Based on this knowledge, creating your own slice is actually pretty easy. An example of such slice could be a new &lt;code&gt;DataJdbcTest&lt;/code&gt;, a slice similar to &lt;code&gt;DataJpaTest&lt;/code&gt; that only configures &lt;code&gt;JdbcTemplate&lt;/code&gt; and does not use JPA. If you want to play with the code right the way, check the &lt;a href="https://github.com/snicoll-scratches/demo-data-jdbc-test"&gt;github repository&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Our first step is to create &lt;code&gt;@AutoconfigureDataJdbc&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;package com.example.test.autoconfigure.jdbc;&#xD;
&#xD;
import java.lang.annotation.*;&#xD;
import org.springframework.boot.autoconfigure.ImportAutoConfiguration;&#xD;
&#xD;
@Target(ElementType.TYPE)&#xD;
@Retention(RetentionPolicy.RUNTIME)&#xD;
@Documented&#xD;
@ImportAutoConfiguration&#xD;
public @interface AutoconfigureDataJdbc {&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and register the relevant auto-configurations to apply when this annotation is present. Again, create a &lt;code&gt;META-INF/spring.factories&lt;/code&gt; resource:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;com.example.test.autoconfigure.jdbc.AutoconfigureDataJdbc=\&#xD;
org.s.boot.autoconfigure.flyway.FlywayAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\&#xD;
org.s.boot.autoconfigure.transaction.TransactionAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once that reusable infrastructure is in place, you can create your test slice and simply specify that you need a database and jdbc:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@BootstrapWith(SpringBootTestContextBootstrapper.class)&#xD;
@OverrideAutoConfiguration(enabled = false)&#xD;
@TypeExcludeFilters(DataJdbcTypeExcludeFilter.class)&#xD;
@Transactional&#xD;
@AutoConfigureCache&#xD;
@AutoconfigureDataJdbc&#xD;
@AutoConfigureTestDatabase&#xD;
@ImportAutoConfiguration&#xD;
public @interface DataJdbcTest { }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/snicoll-scratches/demo-data-jdbc-test/blob/d0c0eaaecfc048a7543a86f3e9c91804eabad6e0/src/main/java/com/example/test/autoconfigure/jdbc/DataJdbcTypeExcludeFilter.java#L13"&gt;&lt;code&gt;DataJdbcTypeExcludeFilter&lt;/code&gt;&lt;/a&gt; makes sure to exclude all your other services as such test shouldn&amp;rsquo;t require any of your beans by default. It could be improve to allow services to be defined as a parameter of the annotation, pretty much like &lt;code&gt;WebMvcTest&lt;/code&gt; adds specified controller(s).&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve done that, you only need to add your annotation and your &lt;code&gt;JdbcTemplate&lt;/code&gt; is auto-configured for you with a test database:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RunWith(SpringRunner.class)&#xD;
@DataJdbcTest&#xD;
public class DataJdbcSampleTests {&#xD;
&#xD;
    @Autowired&#xD;
    private JdbcTemplate jdbcTemplate;&#xD;
&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#summary" class="anchor" name="summary"&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.4 brings auto-configuration to your tests and allows you to easily compose your own test annotations. In this article we&amp;rsquo;ve seen how &lt;code&gt;WebMvcTest&lt;/code&gt; works and how you could create your own &amp;ldquo;jdbc&amp;rdquo; slice. We&amp;rsquo;re actually &lt;a href="https://github.com/spring-projects/spring-boot/issues/6563"&gt;considering adding that annotation in the next release&lt;/a&gt; so please &lt;a href="gitter.im/spring-projects/spring-boot"&gt;keep the feedback coming&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - August 30th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/30/this-week-in-spring-august-30th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-08-30:2603</id>
    <updated>2016-08-30T09:27:49Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;ve been in San Francisco, (where I live and) where I addressed the Silicon Valley Spring User Group. Now it&amp;rsquo;s off to beautiful China to bring some Spring and Pivotal (and, maybe, take a little vacation!)&lt;/p&gt;
&lt;p&gt;As usual, we have a &lt;em&gt;lot&lt;/em&gt; to get to so let&amp;rsquo;s!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring ninja Greg Turnquist has just announced &lt;a href="https://spring.io/blog/2016/08/29/spring-web-services-2-3-1-2-4-0-are-released"&gt;that Spring Web Services 2.3.1 and 2.4.0 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud ninja Marcin Grzejszczak just announced &lt;a href="https://spring.io/blog/2016/08/29/spring-cloud-camden-m1-is-available"&gt;that Spring Cloud Camden M1 is now available &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Thomas Risberg just announced &lt;a href="https://spring.io/blog/2016/08/26/spring-cloud-data-flow-for-mesos-1-0-rc2-released"&gt;that Spring Cloud Data Flow for Mesos 1.0.RC2 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Marius Bogoevici just announced Spring Cloud Stream Brooklyn M1 is now available. This release is &lt;a href="https://spring.io/blog/2016/08/26/spring-cloud-stream-brooklyn-m1-is-available"&gt;packed full of new features including support for reactive programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Eric Bottard just announced &lt;a href="https://spring.io/blog/2016/08/25/spring-cloud-data-flow-for-cloud-foundry-goes-1-0-ga"&gt;that Spring Cloud Data Flow for Cloud Foundry 1.0. has gone GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/08/24/check-your-spring-security-saml-config-xxe-security-issue"&gt;if you&amp;rsquo;re using Spring Security SAML, you should check out this security update&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Security lead Rob Winch &lt;a href="https://spring.io/blog/2016/08/24/spring-security-4-1-3-released"&gt;just announced Spring Security 4.1.3, packed full of fixes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Recent Spring Cloud team addition Ryan Baxter &lt;a href="https://spring.io/blog/2016/08/23/spring-cloud-brixton-sr5-is-available"&gt;just announced Spring Cloud Brixton SR5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration lead Gary Russell just announced that &lt;a href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available"&gt;Spring for Apache Kafka 1.1.0 M1 is now available.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I put on a 4 hour long workshop in Singapore introducing &lt;a href="https://www.youtube.com/watch?v=JUqZxUlixSw"&gt;Spring Boot, Spring Cloud, Spring Coud Data Flow, Spring Cloud Security and Spring Security OAuth. The whole thing was recorded and is available online here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;on August 14th, Reno Chou came to one of my &lt;em&gt;Cloud Native Java&lt;/em&gt; talks in China and started writing up some of the information discussed in a series of blogs. Here are his &lt;a href="http://blog.itmuch.com/article/13"&gt;first&lt;/a&gt; and &lt;a href="http://blog.itmuch.com/article/15"&gt;second&lt;/a&gt; Chinese-language installments. Very cool Reno!&lt;/li&gt;
  &lt;li&gt;I Antoine&amp;rsquo;s French language post detailing how he migrated &lt;a href="http://javaetmoi.com/2016/08/migrer-vers-spring-boot/"&gt;the Spring Petclinic application from Spring 4 to Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cool! Vojtech Ruzicka put together a nice review of his &lt;a href="http://vojtechruzicka.com/pivotal-certified-spring-web-application-developer-notes/"&gt;experience with the Pivotal Certified Spring Web Application Developer exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked Tim Spann&amp;rsquo;s post on &lt;a href="https://community.hortonworks.com/articles/53629/writing-a-spring-boot-microservices-to-access-hive.html"&gt;using Spring Boot to access data from Apache Hive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Web Services 2.3.1/2.4.0 are released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/29/spring-web-services-2-3-1-2-4-0-are-released" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2016-08-29:2602</id>
    <updated>2016-08-29T16:09:21Z</updated>
    <content type="html">&lt;p&gt;Greetings Spring community,&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ws/"&gt;Spring Web Services&lt;/a&gt; has just released versions 2.3.1.RELEASE and 2.4.0.RELEASE. &lt;/p&gt;
&lt;p&gt;2.3.1.RELEASE is a minor patch release. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10060&amp;version=15557"&gt;2.3.1 Release Notes&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-ws/docs/2.3.1.RELEASE/reference/htmlsingle/"&gt;2.3.1 Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2.4.0.RELEASE rebases Spring Web Services to run on Spring Framework 4.2.x &amp;amp; Spring Security 4.0.x, the stable baselines behind Spring 4.3/Spring Security 4.1. At the same time, it remains compatible with Java 7. This version includes changes to the code base making it forward compatible with Spring 4.3 and 5.0, so you are free to move up to whichever version of Spring/Spring Security you wish to use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10060&amp;version=15716"&gt;2.4.0 Release Notes&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-ws/docs/2.4.0.RELEASE/reference/htmlsingle/"&gt;2.4.0 Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to some tunings in our build, there are now CI jobs building every commit against Spring 4.2, 4.3, and 5.0. You can sleep at night know the code has been tested against your favorite version of Spring. Easy migration paths are a must for the Spring community.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ws/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-ws"&gt;GitHub&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/SWS"&gt;Issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The artifacts are staged on maven central, &lt;a href="http://repo.spring.io/release"&gt;http://repo.spring.io/release&lt;/a&gt;, and bintray.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Camden M1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/29/spring-cloud-camden-m1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2016-08-29:2601</id>
    <updated>2016-08-29T12:19:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Milestone 1 of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. We’ve made numerous enhancements and bug fixes! You can check out the &lt;code&gt;Camden.M1&lt;/code&gt; &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Camden-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Camden.M1:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;Spring Cloud Build        1.2.0.RELEASE
Spring Cloud Stream       Brooklyn.M1
Spring Cloud Bus          1.2.0.M1
Spring Cloud Config       1.2.0.M1
Spring Cloud Netflix      1.2.0.M1
Spring Cloud Consul       1.1.0.M1
Spring Cloud Contract     1.0.0.M2
Spring Cloud CLI          1.2.0.M1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The combined release train docs are available &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on Stack Overflow, or on Twitter.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Camden.M1&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
repositories {&#xD;
    maven {&#xD;
        url &amp;#39;http://repo.spring.io/milestone&amp;#39;&#xD;
    }&#xD;
}&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Camden.M1&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Mesos 1.0 RC2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/08/26/spring-cloud-data-flow-for-mesos-1-0-rc2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-08-26:2600</id>
    <updated>2016-08-26T20:01:27Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce the 1.0.0.RC2 release candidate of Spring Cloud Data Flow for Mesos, a team effort that encompasses many new features under the hood.&lt;/p&gt;
&lt;p&gt;This release candidate builds upon the recent 1.0 GA release of Spring Cloud Data Flow. Some highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We now run the Spring Cloud Data Flow Server as a Docker image on Marathon, a container orchestration platform for Mesos.&lt;/li&gt;
  &lt;li&gt;This release adds features to support stream partitioning and scaling&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Currently partitioning and scaling of sinks and processors are handled by using multiple application deployments, one for each app instance, identified by an index appended to the name.&lt;/li&gt;&lt;br/&gt;&lt;li&gt;Scaling of sources is handled by using additional application instances.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;Streams are now deployed using Marathon &lt;a href="https://mesosphere.github.io/marathon/docs/application-groups.html"&gt;Application Groups&lt;/a&gt; so it is easier to identify the different apps making up a stream.&lt;/li&gt;
  &lt;li&gt;We have added support for launching tasks using Chronos, a fault tolerant job scheduler for Mesos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As part of this effort we have developed a simple Java client for interacting with the Chronos API. This &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-mesos/tree/master/src/main/java/org/springframework/cloud/mesos/chronos/client"&gt;Java client&lt;/a&gt; is included in the latest 1.0.2.RELEASE version of the &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-mesos"&gt;Spring Cloud Deployer for Mesos project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Mesos &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-mesos/docs/1.0.0.RC2/reference/htmlsingle/#_getting_started"&gt;follow these steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;
&lt;p&gt;For a complete list of changes and improvements, please refer to the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-mesos/issues?q=milestone%3A1.0.0.RC2"&gt;1.0.0.RC2 issues&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
</feed>
